#!/bin/sh

function show_help()
{
    cat <<EOF
$PROG_NAME - creation tool for LUKS partition
Version: $VERSION

(C)Copyright 2017, Wind River Systems, Inc.

Usage: $1 options...

Options:
 --uefi-shell
   Set the path to the device node where the LUKS partition is manipulated.
     e.g, /dev/sda1

 --boot-option

 --http-boot

 --kexec

 -h|--help
   Show this help information.

EOF
}

function print_critical()
{
    printf "\033[1;35m"
    echo "$@"
    printf "\033[0m"
}

function print_error()
{
    printf "\033[1;31m"
    echo "$@"
    printf "\033[0m"
}

function print_warning()
{
    printf "\033[1;33m"
    echo "$@"
    printf "\033[0m"
}

function print_info()
{
    printf "\033[1;32m"
    echo "$@"
    printf "\033[0m"
}

PROG_NAME=`basename $0`

OPT_UEFI_SHELL=1
OPT_BOOT_OPTION=0
OPT_HTTP_BOOT=0
OPT_KEXEC=0

while [ $# -gt 0 ]; do
    opt=$1
    case $opt in
        --uefi-shell)
            OPT_UEFI_SHELL=1
            ;;
        --boot-option)
            OPT_BOOT_OPTION=1
            ;;
        --http-boot)
            OPT_HTTP_BOOT=1
            ;;
        --kexec)
            OPT_KEXEC=1
	    ;;
        -h|--help)
            show_help "$PROG_NAME"
            exit 0
            ;;
        *)
            print_error "Unsupported option $opt"
            exit 1
            ;;
    esac
    shift
done

[ $OPT_UEFI_SHELL -eq 1 ] &&
    cat <<EOF>>/boot/efi/startup.nsh
@echo -off

if not exist fs0:\bzImage_bakup then
    echo "Do nothing"
    # Exit EFI shell and fall back to the next boot option.
    exit
endif

# For the runtime image, enforce to disable IMA appraisal.
# In addition, the backup kernel may have the exploited
# vulnerabilities fixed in the new kernel so we boot up it.
fs0:\bzImage_bakup ima_appraise=off rootwait root=/dev/sda3
EOF
    exit

